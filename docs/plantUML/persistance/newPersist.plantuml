@startuml newPersist

package model #f2a5a2
{
package tamagotchi #edc4c2 {
  class Need <<Serializable>>{
    - CRITICAL_THRESHOLD : int {static}
    - critical : boolean
    - descriptor : String
    - factor : float
    - name : String
    - value : int
    ~ Need()
    ~ Need(name : String, descriptor : String, value : int, factor : Float)
    ~ calcDepletion(secondsElapsed : int)
    + getDescriptor() : String
    ~ getFactor() : Float
    + getName() : String
    + getVal() : int
    ~ isBelowCritical() : boolean
    ~ isCritical() : boolean
    ~ setCritical(critical : boolean)
    + setFactor(factor : Float)
    + setName(name : String)
    ~ setVal(value : int) : int
  }
  class Specie  <<Serializable>> {
    - favoriteFoods : List<String>
    - name : String
    - text : String
    + Specie(choice : String)
    + addFood(newFood : String)
    + getFavoriteFood(index : int) : String
    + getFavoriteFoods() : List<String>
    + getName() : String
    + getText() : String
    ~ initialize(choice : String)
    + setFavoriteFoods(newFoods : List<String>)
    + setName(newName : String)
    + setText(newText : String)
  }
  class Tamagotchi  <<Serializable>>{
    + LOW_NEED_THRESH : int {static}
    - alive : boolean
    - cleanliness : Need
    - energy : Need
    - favoriteFoods : String[]
    - happiness : Need
    - health : Need
    - hunger : Need
    - lastModifiedTime : long
    - mood : String
    - name : String
    ~ needs : Need[]
    - needsList : List<Need>
    - specie : Specie
    + Tamagotchi()
    + checkHealth()
    + depleteNeeds(timeElapsed : long)
    + evalHealth()
    + evalMood()
    + getCleanliness() : int
    + getCleanlinessName() : String
    + getEnergy() : int
    + getEnergyName() : String
    + getFavoriteFood(index : int) : String
    + getFavoriteFoods() : String[]
    + getFood(index : int) : String
    + getFoods() : List<String>
    + getHappiness() : int
    + getHappinessName() : String
    + getHealth() : int
    + getHealthName() : String
    + getHunger() : int
    + getHungerName() : String
    + getModifiedTime() : long
    + getMood() : String
    + getName() : String
    + getNeedArray() : Need[]
    + getSpecie() : String
    + getSpecieText() : String
    + heal(healValue : int)
    + hurt(damage : int)
    + isAlive() : boolean
    + kill()
    + setAlive(alive : boolean)
    + setCleanliness(clean : int)
    + setDefaultStats()
    + setEnergy(energy : int)
    + setHappiness(newHapinnes : int)
    + setHealth(newHealth : int)
    + setHunger(hunger : int)
    + setModifiedTime(time : long)
    + setMood(mood : String)
    + setName(newName : String)
    + setSpecie(newSpecie : String)
    + update()
    + updateTime()
  }
}
package gamemanager #edc4c2{
  class GameLoader {
    - tamaload : Tamagotchi
    + GameLoader()
    + loadTamagotchi() : Tamagotchi
    + loadingSuccess() : boolean
  }
  class GameSaver {
    ~ savetama : Tamagotchi
    + GameSaver()
    + save(tama : Tamagotchi) : int
  }
package sauvegarde <<Database>> {

}
sauvegarde .. GameLoader
sauvegarde .. GameSaver
            note right of sauvegarde : Fichier de sauvegarde stockÃ© sur le disque

}
}

GameLoader -->  "-tamaload" Tamagotchi
GameSaver -->  "-savetama" Tamagotchi
Tamagotchi -left->  "-specie" Specie
Tamagotchi -->  "-hunger" Need
Tamagotchi -->  "-health" Need
Tamagotchi -right->  "-happiness" Need


@enduml